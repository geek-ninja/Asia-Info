{"version":3,"sources":["Map.js","CountryCard.js","CountryList.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Map","center","zoom","className","TileLayer","url","attribution","CountryCard","country","React","useState","top","left","width","transform","modalStyle","open","setOpen","classes","makeStyles","theme","paper","position","minWidth","minHeight","backgroundImage","border","borderRadius","boxShadow","shadows","padding","spacing","color","useStyles","body","style","src","flags","alt","name","common","capital","region","subregion","borders","map","Object","entries","languages","value","onClick","e","preventDefault","Modal","onClose","CountryList","countries","setCountries","loadingData","setLoadingData","useEffect","axios","get","then","data","refresh","a","fetch","response","json","console","log","Button","variant","Footer","App","lat","lng","mapCenter","mapZoom","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08cec04f.chunk.js","sourcesContent":["import React from 'react'\nimport {Map as LeafletMap,TileLayer} from \"react-leaflet\"\nimport './map.css'\n\nfunction Map({center,zoom}) {\n    return (\n        <div className = \"map\">\n            <LeafletMap center = {center} zoom = {zoom}>\n                <TileLayer url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' attribution = '&copy; <a href = \"http://osm.org/copyright\">OpenStreetMap</a> contributors'/>\n            </LeafletMap>\n        </div>\n    )\n}\n\nexport default Map","import React from 'react'\nimport './countrycard.css'\nimport Modal from '@material-ui/core/Modal'\nimport { makeStyles } from '@material-ui/core/styles'\n\nfunction CountryCard({country}) {\n\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);    \n        const useStyles = makeStyles((theme) => ({\n        paper: {\n          position: 'absolute',\n          width: 400,\n          minWidth:200,\n          minHeight:100,\n          backgroundImage: 'linear-gradient(315deg, #f0ecfc 0%, #c797eb 74%);',\n          border: '2px solid #ffff',\n          borderRadius:'20px',\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          color:'black',\n        },\n    }));\n    const classes = useStyles();\n    \n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    \n    function getModalStyle() {\n        const top = 50;\n        const left = 50;\n        const width = 20;\n        return {\n          top: `${top}%`,\n          left: `${left}%`,\n          width: `${width}vw`,\n          transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n    \n    const body = (\n        <div style = {modalStyle} className = {classes.paper}>\n            <div className = 'countryCard-detail'>\n                <div className = \"countryCard-left\">\n                    <img src = {country.flags[1]} alt = 'flag'/>\n                    <p>Name :  {country.name.common}</p>\n                    <p>Capital : {country.capital[0]}</p>\n                    <p> Region : {country.region}</p>\n                    <p> Subregion : {country.subregion}</p>\n                </div>\n                <div className = \"countryCard-right\">\n                    <p>Borders :</p>\n                    <ul>\n                        {\n                            country.borders? country.borders.map((border) => (<li>{border}</li>)):(<li>No borders</li>)\n                        }\n                    </ul>\n                    <p>languages:</p>\n                    <ul>\n                    {\n                        Object.entries(country.languages).map(([key,value])=> (<li>{value}</li>))\n                    }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n\n    const countryDetail = (e) => {\n        e.preventDefault();\n        handleOpen();\n    }\n    return (\n        <div className = 'countryCard'>\n            <div className = 'countryCard-details'  onClick = {countryDetail}>\n                <img src = {country.flags[1]} alt = 'flag'/>\n                <p>{country.name.common}</p>\n            </div>\n            <Modal\n            open={open}\n            onClose={handleClose}\n            >\n            {body}\n            </Modal>\n        </div>\n    )\n}\n\nexport default CountryCard\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport './countrylist.css'\nimport CountryCard from './CountryCard';\nimport Button from '@material-ui/core/Button';\n\nfunction CountryList() {\n\n    const [countries,setCountries] = useState([])\n    const [loadingData, setLoadingData] = useState(false);\n\n    useEffect(() => {\n        axios.get('https://restcountries.com/v3/region/asia').then((data) => {\n            setCountries(data.data)\n        })\n    }, [])\n\n    const refresh = async () => {\n        setLoadingData(true);\n        const response = await fetch(\"https://restcountries.com/v3/region/asia\");\n        const data = await response.json();\n        console.log(data);\n        setCountries(data);\n        setLoadingData(false);\n    };\n\n    return (\n        <div className = 'countrylist'>\n            <div className = 'list'>\n            {\n                countries.map((country) => (\n                    <CountryCard country = {country}/>\n                ))\n            }\n            </div>\n            <div className = 'country-refresh'>\n            {!loadingData && <Button variant=\"contained\" color=\"secondary\" onClick = {refresh}><strong>Refresh Data</strong></Button>}\n            {loadingData && <strong><span>Loading...</span></strong>}\n            </div>\n        </div>\n    )\n}\n\nexport default CountryList\n","import React from 'react'\nimport './footer.css'\n\nfunction Footer() {\n    return (\n        <div className = 'footer'>\n            <h2>Made By Sanket Puhan</h2>\n            <p>Copyright Â© 2021 All rights Reserved.</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import './App.css';\nimport Map from './Map'\nimport CountryList from './CountryList';\nimport \"leaflet/dist/leaflet.css\"\nimport { useState } from 'react';\nimport Footer from './Footer';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nfunction App() {\n  \n  const [mapCenter,setMapCenter] = useState({lat: 34.0479,lng: 100.6197})\n  const [mapZoom,setMapZoom] = useState(3)\n\n  return (\n    <div className=\"app\">\n      <div className = 'app-header'>\n      <h1>My Asia</h1>\n      <LanguageIcon fontSize = 'large'/>\n      </div>\n      <div className = 'app-map'>\n        <Map center = {mapCenter} zoom = {mapZoom}/>\n      </div>\n      <div className = 'app-country-list'>\n        <h2>Asian Countries</h2>\n        <CountryList/>\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}